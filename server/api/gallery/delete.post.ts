import { unlink } from 'fs/promises'
import { join } from 'path'
import { existsSync } from 'fs'

interface DeleteResponse {
  success: boolean
  error?: string
}

export default defineEventHandler(async (event): Promise<DeleteResponse> => {
  try {
    console.log('üì∏ API: –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è')
    
    const body = await readBody(event)
    const { id } = body

    if (!id) {
      throw createError({
        statusCode: 400,
        statusMessage: 'ID –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω'
      })
    }

    const galleryDir = join(process.cwd(), 'public', 'gallery')
    const thumbnailsDir = join(process.cwd(), 'public', 'gallery', 'thumbnails')

    const imagePath = join(galleryDir, `${id}.webp`)
    const thumbnailPath = join(thumbnailsDir, `${id}_thumb.webp`)

    // –£–¥–∞–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    if (existsSync(imagePath)) {
      await unlink(imagePath)
      console.log(`‚úÖ API: –£–¥–∞–ª–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${id}.webp`)
    }

    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–≤—å—é
    if (existsSync(thumbnailPath)) {
      await unlink(thumbnailPath)
      console.log(`‚úÖ API: –£–¥–∞–ª–µ–Ω–æ –ø—Ä–µ–≤—å—é ${id}_thumb.webp`)
    }

    return {
      success: true
    }

  } catch (error) {
    console.error('‚ùå API: –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error)
    return {
      success: false,
      error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è'
    }
  }
}) 